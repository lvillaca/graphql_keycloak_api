plugins {
    id 'java'
    id 'org.sonarqube' version '2.7'
    id 'jacoco'
    id 'maven-publish'
    id 'maven'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '5.3.0'
}

// This is used as the docker image prefix (org)
group = System.getenv('group')
archivesBaseName = System.getenv('name')
version = System.getenv('calculatedVersion')

//properties for Sonar
sonarqube {
    System.setProperty "sonar.host.url", System.getenv('SONAR_URL')
    System.setProperty "sonar.login", System.getenv('USER')
    System.setProperty "sonar.password", System.getenv('PASSWD_INTEGRACAO')
    System.setProperty "sonar.projectKey", System.getenv('name') + ":" + System.getenv('ref')
    System.setProperty "sonar.projectName", System.getenv('name')
    System.setProperty "sonar.projectVersion", System.getenv('calculatedVersion')
    System.setProperty "sonar.coverage.jacoco.xmlReportPath", "$buildDir/reports/jacoco/test"
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

// tag::task[]
task buildDocker(type: DockerBuildImage) {
    dependsOn build
    inputDir = projectDir
    tags.add(""+System.getenv('group')+"/${archivesBaseName}:${version}")
}
// end::task[]


tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
  finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("$buildDir/reports/jacoco/test")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

configurations {
    // holds jars to include in the jar
    extraLibs
}

repositories {
    mavenCentral()
}

publishing {
    repositories {
        maven {
        //Maven Repository
        credentials {
            username System.getenv('USER')
            password System.getenv('PASSWD_INTEGRACAO')
        }
        url = ""+System.getenv('NEXUS_URL')+"/"+System.getenv('nexusPath')
    }
    }
    publications {
        maven (MavenPublication) {
            version = System.getenv('calculatedVersion')
            artifactId = System.getenv('name')
            groupId = System.getenv('group')
            artifact "build/libs/"+System.getenv('name')+"-"+System.getenv('calculatedVersion')+".jar" // an existing jar
        }
    }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
   // compile group: 'org.springframework.boot', name: 'spring-boot', version: '2.2.2.RELEASE'
    
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: '2.2.2.RELEASE'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.2.RELEASE'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.16.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'


    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.2.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.2.2.RELEASE'

    compile group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: '19.8.0.0'
    extraLibs (group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: '19.8.0.0')


    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.0'
    compile group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.5'
    compile group: 'com.graphql-java', name: 'graphql-java-tools', version: '5.2.4'
    compile group: 'com.graphql-java', name: 'graphql-spring-boot-starter', version: '5.0.2'
   
    // for distributed caching
    compile group: 'org.infinispan', name: 'infinispan-spring-boot-starter-remote', version: '2.2.0.Final'

}
